name: (main) Deploy to service provider

on:
  schedule:
    - cron: '0 * * * 0' # Every Sunday of the month
  push:
    branches: ['main']
  pull_request_target:
    branches: ['main']    
  workflow_dispatch:
     inputs:
      dry_run:
        description: 'Dry run'
        default: true
        required: true
        type: boolean
concurrency: # Multiple jobs should NOT run at the same time
  group: ${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  build:
    env:
      CPANEL_TOKEN: ${{ secrets.CPANEL_TOKEN }}
      REPO_URL: ${{ secrets.REPO_URL }}
      RSA_ID: ${{ secrets.SSH_RSA_ID }} # SSH private key stored as a secret
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Set up the SSH key for git access
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          # Ensure correct formatting of the private key with newlines
          echo "${{ secrets.SSH_RSA_ID }}" | tr -d '\r' | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Add the server to known hosts to avoid the prompt
          ssh-keyscan -p 7822 ubsc.hosting2.acm.org >> ~/.ssh/known_hosts
          # Start the SSH agent and add the key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          # Debugging: Check if the key is added
          ssh-add -l
        shell: bash

      # Test SSH Connection
      - name: Test SSH Connection
        run: |
          ssh -p 7822 ubschosting@ubsc.hosting2.acm.org "echo 'SSH Connection Successful'"
      # Write Sentry resource file
      #- name: Write Sentry resource file
      #  run: echo $SENTRY_AUTH_TOKEN >> sentry_token.txt
      
      #- uses: superfly/flyctl-actions/setup-flyctl@master

      # Deploy to fly.io
      - name: Deploy to A2Hosting
        if: ${{ inputs.dry_run == false && github.event_name != 'pull_request_target' }}
        run: | 
         npm install
         npm run build
         # Ensure the REPO_URL is an SSH URL and clone the remote repository
         git config --global user.name "ubschosting"
         git config --global user.email "ubschosting@ubsc.hosting2.acm.org"
         git clone $REPO_URL app
         cd app
         mv .git ../build
         cd ..
         rm -rf app
         cp package.json ./build/package.json
         cd build
         git add .
         git commit -m "Autobuild: Generated by GitHub"
         git push
