# Use an official Rust image as a parent image
FROM rust:bookworm AS builder

# Set the working directory
WORKDIR /usr/src/neon

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential libtool libreadline-dev zlib1g-dev flex bison libseccomp-dev \
    libssl-dev clang pkg-config libpq-dev cmake postgresql-client protobuf-compiler \
    libprotobuf-dev libcurl4-openssl-dev openssl python3-poetry lsof libicu-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Rust
# RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
#    && . "$HOME/.cargo/env"

# Clone the repository
RUN git clone --recursive https://github.com/neondatabase/neon.git .

# Build Neon and patched Postgres
RUN BUILD_TYPE=release make -j$(nproc) -s

# Remove all directories in the release folder except for the files
RUN cd /usr/src/neon/target/release && \
    find . -mindepth 1 -maxdepth 1 -type d -exec rm -r {} +

# Final stage
FROM rust:bookworm

# Set the working directory
WORKDIR /usr/src/neon

# Copy the built binaries from the builder stage
COPY --from=builder /usr/src/neon/target/release /usr/src/neon
COPY --from=builder /usr/src/neon/pg_install /usr/src/neon/pg_install

# Expose ports
EXPOSE 50051 64000 5454 55432 55434

# Create Postgres User
RUN useradd -m -s /bin/bash postgres

# Change ownership of the directory to the non-root user
RUN chown -R postgres:postgres /usr/src/neon

# Switch to the non-root user
USER postgres

# Initialize Neon
RUN ./neon_local init && \
    ./neon_local start && \
    ./neon_local tenant create --set-default && \
    ./neon_local endpoint create main && \
    ./neon_local stop

# Start Neon and create initial tenant and compute node
CMD ["/bin/bash", "-c", "\
    ./neon_local start && \
    ./neon_local endpoint start main && \
    tail -f /dev/null"]